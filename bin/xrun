#!/usr/bin/env bash

errored=0

_err_trap() {
  local tmp_file
  tmp_file="$2"

  (
    printf "[WARN] exit code was $1, here's STDERR:\n\n<---\n"
    cat $tmp_file
    echo "--->"
  ) | less --tabs=4 -RX >&4
  errored=1
}

_exit_trap() {
  local tmp_file
  tmp_file="$1"
  rm -f $tmp_file
  exec 2>&3

  if [[ "$errored" == "0" ]]; then
    echo "[INFO] done; hit return or chill for 3 seconds..."
    read -t 3 || true
  fi
}

_read_pub() {
  local dispatch; dispatch="$1"; shift 1 || return
  (
    source "${HOME}/bin/${dispatch}"
    for fn in $(declare -F | grep -E ' ,' | cut -d"," -f2-); do
      echo "${dispatch:1} ${fn}"
    done
  )
}

_split_cmd() {
  local cmd dispatch fn; cmd="$1"; shift 1 || return
  dispatch=",$(echo $cmd | cut -d" " -f1)"
  fn=",$(echo $cmd | cut -d" " -f2-)"
  echo "$dispatch $fn"
}

# no args - listing
if [[ "$@" == "" ]]; then
  # all scripts starting with "," are dispatchers
  dispatchers=$(\
    find -L ~/bin -type f -name ",*" -executable \
    | sort | xargs -l basename)

  # all functions starting with "," withing dispatchers are public
  # alias | awk -F'[ =]' '{print $1}'
  for _dis in $dispatchers; do
    _read_pub $_dis
  done
elif [[ "$1" == "_dispatch" ]]; then
  shift
  cmd="$(_split_cmd "$*")"; shift 1 || exit

  tmp_file=$(mktemp -u)
  exec 4>&2 3>&2 2>"$tmp_file"
  trap '_err_trap $? $tmp_file' ERR
  trap '_exit_trap $tmp_file' TERM QUIT KILL EXIT

  $cmd
else
  nohup alacritty --title="rofi-xrun: $cmd" \
    -e zsh -c "~/bin/xrun _dispatch $@" 1>/dev/null 2>&1 &
  disown
fi
